- name: sed -ie 's/^#log_path/log_path/' /etc/ansible/ansible.cfg
  shell: |
    sed -ie 's/^#log_path/log_path/' /etc/ansible/ansible.cfg
    sed -ie 's/^#no_log = False/no_log = False/' /etc/ansible/ansible.cfg

- apt_repository:
    repo: "{{ item }}"
  with_items: 
    - ppa:hluk/copyq
    - ppa:linrunner/tlp
- name: apt install
  apt:
    update_cache: true
    name: "{{ item }}"
    state: latest
    autoclean: true
    autoremove: true
  with_items:
    #- aptitude
    - xbindkeys

    - git
    - zsh
    - tree
    - unar

    - sysstat
    - duc

    - p7zip-full #7z
    - p7zip-rar

    - nkf
    - colordiff
    - vim
    - pandoc
    - xsel
    - copyq

    - x11-xserver-utils
    - powertop 
    - tlp 
    - tlp-rdw

    - w3m
    - w3m-img

    - clamav
    - chkrootkit

    # for local machine : hard ware
    - xbacklight
    # for local machine : drive
    - exfat-fuse
    - exfat-utils
    # for local machine : network
    - linux-generic-hwe-16.04
    - connect-proxy
    - lshw
    - wicd
    - intel-microcode
    # not for virtualmachine
    - vagrant
    - virtualbox

    - fonts-ricty-diminished 
    - fonts-ipafont-gothic
    - fonts-ipafont-mincho
#- shell: |
#    sudo powertop --calibrate
#    sudo powertop --auto-tune
#    sudo tlp start

# sar grapher
#- shell: |
#    cp /etc/default/sysstat /etc/default/sysstat.bak
#    sed -ie 's/^ENABLED="false"$/ENABLED="true"/' /etc/default/sysstat
#    /etc/init.d/sysstat start
#    wget https://sourceforge.net/projects/ksar/files/latest/download -O /usr/local/src/ksar.zip
#    unzip /usr/local/src/ksar.zip -d /usr/local/src

- name: init sh 
  become: true
  become_user: "{{ ubuntu_user }}" 
  git:
    repo: git://github.com/enxajt/init.git
    dest: /home/{{ ubuntu_user }}/init
- name: git remote set-url origin git@github.com:enxajt/init.git
  shell: |
    cd /home/{{ ubuntu_user }}/init && git remote set-url origin git@github.com:enxajt/init.git
- name: init sh 
  become: true
  become_user: "{{ ubuntu_user }}" 
  shell: | 
    sh /home/{{ ubuntu_user }}/init/install-tmux.sh
    sh ~/init/install-neovim.sh 

- name: HandleLidSwitch=ignore
  shell: |
    cp /etc/systemd/logind.conf /etc/systemd/logind.conf.bak
    echo HandleLidSwitch=ignore >> /etc/systemd/logind.conf
    service systemd-logind restart

#- name: after zshrc : prepare to install go
#  file:
#    state: directory
#    path: '{ item }'
#    owner: "{{ ubuntu_user }}" 
#    group: "{{ ubuntu_user }}" 
#    mode: 0777 
#    recurse: true
#  with_items:
#    - /home/{{ ubuntu_user }}/.cache
#    - /home/{{ ubuntu_user }}/go
#- name: install go, get ghq
#  become: true
#  become_user: "{{ ubuntu_user }}"
#  shell: |
#    wget https://dl.google.com/go/go1.9.3.linux-amd64.tar.gz -O /home/{{ ubuntu_user }}/.cache/go.tar.gz
#    sudo tar -C /usr/local -xzf /home/{{ ubuntu_user }}/.cache/go.tar.gz
#    go get github.com/motemen/ghq
#- name: fzf
#  become: true
#  become_user: "{{ ubuntu_user }}"
#  shell: |
#    ghq get https://github.com/junegunn/fzf.git
#    sh .ghq/github.com/junegunn/fzf/install
